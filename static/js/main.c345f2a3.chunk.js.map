{"version":3,"sources":["components/Alert/Alert.js","redux/authReducer.js","components/Layout/Layout.jsx","api/api.js","redux/videosReducer.js","components/CardList/Card.js","components/CardList/CardList.js","components/Slider/Slider.js","components/QueryOptions/QueryOptions.js","components/Modal/Modal.js","components/Search/Search.js","components/Favorites/Favorites.js","components/EnterMessage/EnterMessage.js","components/AuthPage/AuthPage.js","App.js","reportWebVitals.js","redux/rootReducer.js","index.js"],"names":["CustomAlert","isAlertShow","useSelector","state","auth","error","message","type","authLogin","createAsyncThunk","a","email","password","db","data","id","users","find","i","token","jwt","userId","localStorage","setItem","JSON","stringify","authReducer","createSlice","name","initialState","isAuthenticated","form","reducers","formChange","action","payload","setIsAuthenticated","authLogout","extraReducers","builder","addCase","fulfilled","rejected","actions","Header","Layout","Content","CustomLayout","props","location","useLocation","dispatch","useDispatch","className","span","theme","mode","defaultSelectedKeys","selectedKeys","pathname","Item","to","href","onClick","removeItem","style","padding","children","api","value","axios","get","then","response","max","sort","currentQuery","loadVideos","loadSavedVideos","videosReducer","items","totalResults","isFetched","favorites","current","currentTitle","queries","modalVisible","editedId","setSearchValue","setCurrent","addQuery","addLocalStorageQueries","filterFavorites","setModalVisible","setEditedId","pageInfo","horizontal","ellipsis","outerCol","innerColFirst","innerColSecond","vertical","CustomCard","title","description","channelTitle","img","isDirectionVertical","marginTop","width","paddingLeft","paddingRight","alt","src","Text","fontSize","color","CardList","query","videos","useState","setIsDirectionVertical","directionToggle","e","console","log","currentTarget","UnorderedListOutlined","AppstoreOutlined","paddingTop","justify","map","snippet","thumbnails","medium","url","videoId","IntegerStepSlider","inputValue","onChange","setState","setMax","this","min","marginLeft","React","Component","QueryOptions","saveButtonTitle","cancelButtonTitle","searchQuery","editedItem","setEditedItem","useEffect","changeHandler","event","target","Math","random","queryData","labelCol","wrapperCol","layout","initialValues","requiredMark","label","placeholder","required","rules","val","Option","sliderValue","push","htmlType","disabled","length","filteredFavorites","filter","CustomModal","modalTitle","footer","visible","onOk","closable","Search","Input","CustomSearch","onSearchHandler","onChangeHandler","suffix","HeartOutlined","enterButton","size","onSearch","Favorites","searchQueryFav","setSearchQueryFav","history","useHistory","onRunHandler","onEditHandler","onDeleteHandler","header","dataSource","renderItem","item","margin","CaretRightOutlined","FormOutlined","DeleteOutlined","info","EnterMessage","AuthPage","localStorageAuthData","parse","getItem","localStorageFavData","marginRight","remember","Password","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c345f2a3.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Alert} from 'antd';\r\nimport {useSelector} from 'react-redux'\r\n\r\nexport const CustomAlert = () => {\r\n    const isAlertShow = useSelector(state => state.auth.isAlertShow)\r\n    const error = useSelector(state => state.auth.error)\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isAlertShow\r\n                    ?\r\n                    <Alert message={error} type=\"error\"/>\r\n                    :\r\n                    null\r\n\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\r\nimport * as jwt from 'jsonwebtoken'\r\nimport db from '../db.json'\r\nconst storageName = 'userData'\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    isAlertShow: false,\r\n    error: null,\r\n    isAuthenticated: false,\r\n    form: {\r\n        email: '', password: ''\r\n    }\r\n}\r\n\r\nexport const authLogin = createAsyncThunk(\r\n    'authReducer/authLogin ',\r\n    async ({email, password}) => {\r\n        const data = await db\r\n        const id = data.users.find(i => i.email === email && i.password === password).id\r\n        const token = jwt.sign(\r\n            {userId: 1},\r\n            'jwtSecret'\r\n        )\r\n        localStorage.setItem(storageName, JSON.stringify({\r\n            userId: id, token: token\r\n        }))\r\n        return {id, token}\r\n\r\n    }\r\n)\r\n\r\n\r\nconst authReducer = createSlice({\r\n    name: 'authReducer',\r\n    initialState,\r\n    reducers: {\r\n        formChange: (state, action) => {\r\n            return {\r\n                ...state,\r\n                form: {...state.form, ...action.payload}\r\n            }\r\n        },\r\n        setIsAuthenticated: (state, action) => {\r\n            return {\r\n                ...state,\r\n                isAuthenticated: action.payload\r\n            }\r\n        },\r\n\r\n        authLogout: (state, action) => {\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                userId: null,\r\n                isAuthenticated: false\r\n            }\r\n        },\r\n\r\n    },\r\n    extraReducers: builder => {\r\n        builder.addCase(authLogin.fulfilled, (state, action) => {\r\n                return {\r\n                    ...state,\r\n                    token: action.payload.token,\r\n                    userId: action.payload.id,\r\n                    error: action.payload.error,\r\n                    isAuthenticated: !!action.payload.token,\r\n                    isAlertShow: false\r\n                }\r\n\r\n            }\r\n        ).addCase(authLogin.rejected, (state, action) => {\r\n                    return {\r\n                        ...state,\r\n                        error: 'Введены неправильные данные',\r\n                        isAlertShow: true\r\n                    }\r\n\r\n                }\r\n            )\r\n    }\r\n})\r\n\r\nexport const {authLogout, formChange, setIsAuthenticated} = authReducer.actions\r\n\r\nexport default authReducer.reducer","import React from 'react'\r\nimport {Layout, Menu, Row} from 'antd'\r\nimport './Layout.css'\r\nimport Col from 'antd/es/grid/col'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux'\r\nimport {authLogout} from '../../redux/authReducer'\r\nimport {useLocation} from 'react-router'\r\n\r\nconst {Header, Content} = Layout\r\n\r\nexport const CustomLayout = (props) => {\r\n\r\n    let location = useLocation()\r\n    const dispatch = useDispatch()\r\n    const logoutHandler = () => {\r\n        localStorage.removeItem('userData')\r\n        dispatch(authLogout())\r\n    }\r\n\r\n    return (\r\n        <Layout className=\"layout\">\r\n            <Header>\r\n                <Row>\r\n                    <Col span={2}>\r\n                        <div className=\"logo\"/>\r\n                    </Col>\r\n\r\n                    <Col span={20}>\r\n                        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={\"/search\"}\r\n                              selectedKeys={location.pathname}>\r\n                            <Menu.Item key=\"/search\"><Link to=\"/search\">Поиск</Link></Menu.Item>\r\n                            <Menu.Item key=\"/favorites\"><Link to=\"/favorites\">Избранное</Link></Menu.Item>\r\n                        </Menu>\r\n                    </Col>\r\n\r\n                    <Col span={2}>\r\n                        <div className='logout'>\r\n                            <a href=\"/\" onClick={logoutHandler}>Выйти</a>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Header>\r\n            <Content style={{padding: '0 50px'}}>\r\n                {props.children}\r\n            </Content>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import axios from 'axios'\r\n\r\nexport const api = {\r\n    fetchVideos(value) {\r\n        return axios.get(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=12&q=${value}&type=video&key=AIzaSyDYHTm0YMsvO258SlFP22RFzF-WbAVR1Fo`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    fetchVideosBySavedQuery(max, sort, currentQuery) {\r\n        return axios.get(`https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=${currentQuery}&maxResults=${max}&type=video&videoType=${sort}&key=AIzaSyDYHTm0YMsvO258SlFP22RFzF-WbAVR1Fo`).then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n}","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\r\nimport {DATA} from './items'\r\nimport {api} from '../api/api'\r\n\r\nconst initialState = {\r\n    items: null,\r\n    value: '',\r\n    totalResults: null,\r\n    isFetched: false,\r\n    favorites: [],\r\n    current: {\r\n        id: null,\r\n        currentQuery: '',\r\n        currentTitle: '',\r\n        max: 25,\r\n        sort: 'any'\r\n    },\r\n    queries: [],\r\n    modalVisible: false,\r\n    editedId: null\r\n\r\n\r\n}\r\nexport const loadVideos = createAsyncThunk(\r\n    'videoReducer/loadVideos',\r\n    async (value) => {\r\n        const data = await api.fetchVideos(value)\r\n        return data\r\n\r\n    }\r\n)\r\nexport const loadSavedVideos = createAsyncThunk(\r\n    'videoReducer/loadSavedVideos',\r\n    async ({max, sort, currentQuery}) => {\r\n        const data = await api.fetchVideosBySavedQuery(max, sort, currentQuery)\r\n        return data\r\n\r\n    }\r\n)\r\nconst videosReducer = createSlice({\r\n    name: 'videosReducer',\r\n    initialState,\r\n    reducers: {\r\n        setSearchValue: (state, action) => {\r\n            return {\r\n                ...state,\r\n                value: action.payload\r\n            }\r\n        },\r\n        setCurrent: (state, action) => {\r\n            return {\r\n                ...state,\r\n                current: {...state.current, ...action.payload}\r\n            }\r\n        },\r\n        addQuery: (state, action) => {\r\n            return {\r\n                ...state,\r\n                favorites: [...state.favorites, action.payload],\r\n\r\n            }\r\n        },\r\n        addLocalStorageQueries: (state, action) => {\r\n            return {\r\n                ...state,\r\n                favorites: [...state.favorites, ...action.payload]\r\n            }\r\n        },\r\n        filterFavorites: (state, action) => {\r\n            return {\r\n                ...state,\r\n                favorites: action.payload\r\n            }\r\n        },\r\n        setModalVisible: (state, action) => {\r\n            return {\r\n                ...state,\r\n                modalVisible: action.payload\r\n            }\r\n        },\r\n        setEditedId: (state, action) => {\r\n            return {\r\n                ...state,\r\n                editedId: action.payload\r\n            }\r\n        },\r\n\r\n    },\r\n    extraReducers: builder => {\r\n        builder.addCase(loadVideos.fulfilled, (state, action) => {\r\n            return {\r\n                ...state,\r\n                items: action.payload.items,\r\n                totalResults: action.payload.pageInfo.totalResults,\r\n                isFetched: true\r\n            }\r\n\r\n        }).addCase(loadSavedVideos.fulfilled, (state, action) => {\r\n            return {\r\n                ...state,\r\n                items: action.payload.items,\r\n                totalResults: action.payload.pageInfo.totalResults,\r\n                isFetched: true\r\n            }\r\n\r\n        })\r\n    }\r\n})\r\n\r\nexport const {setSearchValue, addQuery, setCurrent, addLocalStorageQueries, setModalVisible, filterFavorites, setEditedId} = videosReducer.actions\r\n\r\nexport default videosReducer.reducer","import React from 'react'\r\nimport {Row, Col, Typography} from 'antd'\r\n\r\nconst horizontal = {\r\n    ellipsis: false,\r\n    outerCol: 24,\r\n    innerColFirst: 6,\r\n    innerColSecond: 18\r\n}\r\nconst vertical = {\r\n    ellipsis: true,\r\n    outerCol: 6,\r\n    innerColFirst: 24,\r\n    innerColSecond: 24\r\n}\r\n\r\n\r\nexport const CustomCard = ({title, description, channelTitle, img, isDirectionVertical}) => {\r\n\r\n    const {ellipsis, outerCol, innerColFirst, innerColSecond} = isDirectionVertical ? vertical : horizontal\r\n\r\n    return (\r\n        <Col span={outerCol} style={{marginTop: 20, width: '22%', paddingLeft: 10, paddingRight: 10}}>\r\n            <Row>\r\n                <Col span={innerColFirst}>\r\n                    <div>\r\n                        <img\r\n                            alt={title}\r\n                            src={img}\r\n                            style={{width: 320}}\r\n                        />\r\n                    </div>\r\n                </Col>\r\n                <Col span={innerColSecond}>\r\n                    <div>\r\n                        <div>\r\n                            <Typography.Text\r\n                                style={{\r\n                                    fontSize: 18,\r\n                                    width: 320\r\n                                }}\r\n                                ellipsis={ellipsis}\r\n                            >\r\n                                {title}\r\n                            </Typography.Text>\r\n                        </div>\r\n                        <div>\r\n                            <Typography.Text\r\n                                style={{\r\n                                    fontSize: 14,\r\n                                    width: 320,\r\n                                    color: 'gray'\r\n                                }}\r\n                                ellipsis={ellipsis}\r\n                            >\r\n                                {description}\r\n                            </Typography.Text>\r\n                        </div>\r\n                        <div>\r\n                            <Typography.Text\r\n                                style={{\r\n                                    fontSize: 14,\r\n                                    width: 320,\r\n                                    color: 'gray'\r\n                                }}\r\n                                ellipsis={ellipsis}\r\n                            >\r\n                                {channelTitle}\r\n                            </Typography.Text>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport {Col, Row} from 'antd'\r\nimport './CardList.css'\r\nimport {useSelector} from 'react-redux'\r\nimport {CustomCard} from './Card'\r\nimport {UnorderedListOutlined, AppstoreOutlined} from '@ant-design/icons'\r\n\r\nexport const CardList = ({query}) => {\r\n    const items = useSelector(state => state.videos.items)\r\n    const totalResults = useSelector(state => state.videos.totalResults)\r\n    const isFetched = useSelector(state => state.videos.isFetched)\r\n    const [isDirectionVertical, setIsDirectionVertical] = useState(false)\r\n    const directionToggle = (e) => {\r\n        console.log('e', e.currentTarget.title)\r\n        if (e.currentTarget.title === 'vertical') {\r\n            setIsDirectionVertical(true)\r\n        }\r\n        if (e.currentTarget.title === 'horizontal') {\r\n            setIsDirectionVertical(false)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {items\r\n                ?\r\n                <>\r\n                    <Row style={{marginTop: 20}}>\r\n                        <Col span={22}>\r\n                            {isFetched && <h2>Видео по запросу \"{query || <i>пустой запрос</i>}\" <span\r\n                                style={{color: 'gray'}}>{totalResults}</span></h2>}\r\n                        </Col>\r\n                        <Col span={1} style={{fontSize: 30}}>\r\n                            <UnorderedListOutlined\r\n                                title='horizontal'\r\n                                onClick={directionToggle}\r\n                                className={isDirectionVertical && 'activeDirectionIcon'}\r\n                            />\r\n                        </Col>\r\n                        <Col span={1} style={{fontSize: 30}}>\r\n                            <AppstoreOutlined\r\n                                title='vertical'\r\n                                onClick={directionToggle}\r\n                                className={!isDirectionVertical && 'activeDirectionIcon'}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row style={{paddingTop: 30}} justify=\"space-between\">\r\n\r\n                        {items.map(i => {\r\n                            return <CustomCard\r\n                                key={i.id.videoId}\r\n                                title={i.snippet.title}\r\n                                description={i.snippet.description}\r\n                                channelTitle={i.snippet.channelTitle}\r\n                                img={i.snippet.thumbnails.medium.url}\r\n                                isDirectionVertical={isDirectionVertical}\r\n                            />\r\n                        })}\r\n\r\n                    </Row>\r\n                </>\r\n                :\r\n                null\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {Slider, InputNumber, Row, Col} from 'antd'\r\n\r\n\r\nexport class IntegerStepSlider extends React.Component {\r\n\r\n    state = {\r\n        inputValue: 25,\r\n    }\r\n\r\n    onChange = value => {\r\n        this.setState({\r\n            inputValue: value,\r\n        })\r\n        this.props.setMax(value)\r\n    }\r\n\r\n    render() {\r\n        const {inputValue} = this.state\r\n        return (\r\n            <>\r\n                <p style={{fontSize: 18, color: '#ccc'}}>Максимальное количество</p>\r\n                <Row>\r\n                    <Col span={19}>\r\n                        <Slider\r\n                            min={1}\r\n                            max={50}\r\n                            onChange={this.onChange}\r\n                            value={typeof inputValue === 'number' ? inputValue : 0}\r\n                            style={{marginLeft: '0', marginTop: '5'}}\r\n                        />\r\n                    </Col>\r\n                    <Col span={4}>\r\n                        <InputNumber\r\n                            min={1}\r\n                            max={50}\r\n                            value={inputValue}\r\n                            style={{width: 100}}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Select,\r\n    Row, Col\r\n} from 'antd'\r\nimport {IntegerStepSlider} from '../Slider/Slider'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {addQuery, filterFavorites, setCurrent, setModalVisible} from '../../redux/videosReducer'\r\n\r\n\r\nexport const QueryOptions = ({saveButtonTitle, cancelButtonTitle, searchQuery}) => {\r\n    const favorites = useSelector(state => state.videos.favorites)\r\n    const current = useSelector(state => state.videos.current)\r\n    const editedId = useSelector(state => state.videos.editedId)\r\n    const dispatch = useDispatch()\r\n    const [editedItem, setEditedItem] = useState(null)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('favorites', JSON.stringify({\r\n            favorites\r\n        }))\r\n    }, [favorites])\r\n\r\n    useEffect(() => {\r\n        setEditedItem(favorites.find(i => i.id == editedId))\r\n    }, [editedId])\r\n\r\n\r\n\r\n    const changeHandler = (event) => {\r\n        dispatch(setCurrent({[event.target.name]: event.target.value, id: Math.random()}))\r\n    }\r\n\r\n    const selectHandler = (val) => {\r\n        dispatch(setCurrent({sort: val}))\r\n    }\r\n\r\n    const saveButtonHandler = () => {\r\n        const filteredFavorites = favorites.filter(i => {\r\n            return i.id != editedId\r\n\r\n        })\r\n        dispatch(filterFavorites(filteredFavorites))\r\n        dispatch(addQuery(current))\r\n        localStorage.setItem('favorites', JSON.stringify({\r\n            favorites\r\n        }))\r\n        dispatch(setCurrent({currentTitle: ''}))\r\n        dispatch(setModalVisible(false))\r\n\r\n    }\r\n\r\n    const cancelButtonHandler = () => {\r\n        dispatch(setCurrent({currentTitle: ''}))\r\n        dispatch(setModalVisible(false))\r\n    }\r\n\r\n    const setMax = (sliderValue) => {\r\n        dispatch(setCurrent({max: sliderValue}))\r\n    }\r\n\r\n    const queryData = editedItem ? editedItem : current\r\n\r\n    return (\r\n        <>\r\n            <Form\r\n                labelCol={{\r\n                    span: 8,\r\n                }}\r\n                wrapperCol={{\r\n                    span: 24,\r\n                }}\r\n                layout=\"vertical\"\r\n                initialValues={{\r\n                    requiredMark: true\r\n                }}\r\n            >\r\n                <Form.Item style={{color: 'black'}} label=\"Запрос\">\r\n                    <Input value={queryData.currentQuery} name='currentQuery' onChange={changeHandler}\r\n                           placeholder={queryData.currentQuery}/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    required\r\n                    name=\"title\"\r\n                    rules={[\r\n                        {\r\n                            message: 'Укажите название',\r\n                            required: true\r\n                        },\r\n                    ]}\r\n                    label=\"Название\">\r\n                    <Input value={queryData.currentTitle} name='currentTitle' onChange={changeHandler}\r\n                           placeholder='Укажите название'/>\r\n                </Form.Item>\r\n                <Form.Item label=\"Сортировать по\">\r\n                    <Select value={queryData.sort} onChange={selectHandler}>\r\n                        <Select.Option value=\"any\">Без сортировки</Select.Option>\r\n                        <Select.Option value=\"episode\">Эпизоды</Select.Option>\r\n                        <Select.Option value=\"movie\">Фильмы</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <IntegerStepSlider setMax={setMax}/>\r\n                <Form.Item>\r\n                    <Row style={{marginTop: 20}}>\r\n                        <Col span={12} push={12}>\r\n                            <Button type=\"default\" htmlType=\"submit\" onClick={cancelButtonHandler}>\r\n                                {cancelButtonTitle}\r\n                            </Button>\r\n                        </Col>\r\n                        <Col span={12} push={7}>\r\n                            <Button type=\"primary\" disabled={!queryData.currentQuery.length} htmlType=\"submit\"\r\n                                    onClick={saveButtonHandler}>\r\n                                {saveButtonTitle}\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form.Item>\r\n            </Form>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {Modal} from 'antd'\r\nimport {QueryOptions} from '../QueryOptions/QueryOptions'\r\nimport {useSelector} from 'react-redux'\r\n\r\nexport const CustomModal = ({saveButtonTitle, cancelButtonTitle, modalTitle, searchQuery}) => {\r\n\r\n    const modalVisible = useSelector(state => state.videos.modalVisible)\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                footer={null}\r\n                title={modalTitle}\r\n                visible={modalVisible}\r\n                onOk={console.log('ok')}\r\n                closable={false}\r\n            >\r\n                <QueryOptions\r\n                    saveButtonTitle={saveButtonTitle}\r\n                    cancelButtonTitle={cancelButtonTitle}\r\n                    searchQuery={searchQuery}\r\n                />\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport {Input} from 'antd'\r\nimport './Search.css'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {loadVideos, setCurrent, setModalVisible, setSearchValue} from '../../redux/videosReducer'\r\nimport {CardList} from '../CardList/CardList'\r\nimport {HeartOutlined} from '@ant-design/icons'\r\nimport {CustomModal} from '../Modal/Modal'\r\n\r\nconst {Search} = Input\r\n\r\nexport const CustomSearch = () => {\r\n    const isFetched = useSelector(state => state.videos.isFetched)\r\n    const items = useSelector(state => state.videos.items)\r\n    const value = useSelector(state => state.videos.value)\r\n    const current = useSelector(state => state.videos.current)\r\n    const userId = useSelector(state => state.auth.userId)\r\n    const dispatch = useDispatch()\r\n    const onSearchHandler = async () => {\r\n        await dispatch(loadVideos(value))\r\n        dispatch(setCurrent({currentQuery: value, userId: userId}))\r\n\r\n        dispatch(setSearchValue(''))\r\n    }\r\n    const onChangeHandler = (e) => {\r\n        dispatch(setSearchValue(e.currentTarget.value))\r\n\r\n    }\r\n\r\n    const suffix = isFetched ? <HeartOutlined onClick={() => dispatch(setModalVisible(true))}/> : <span/> //? Ant WRNG\r\n\r\n    return (\r\n        <>\r\n            {!isFetched\r\n                ?\r\n                <div className='searchContainer'>\r\n                    <div className='search'>\r\n                        <div className='searchTitle'>Поиск видео</div>\r\n                        <Search\r\n                            placeholder=\"Что хотите посмотреть?\"\r\n                            enterButton=\"Найти\"\r\n                            size=\"large\"\r\n                            onChange={onChangeHandler}\r\n                            onSearch={onSearchHandler}\r\n                            value={value}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <div className='search'>\r\n                        <div className='searchTitle'>Поиск видео</div>\r\n\r\n                        <Search\r\n                            placeholder=\"Что хотите посмотреть?\"\r\n                            enterButton=\"Найти\"\r\n                            value={value}\r\n                            onChange={onChangeHandler}\r\n                            size=\"large\"\r\n                            onSearch={onSearchHandler}\r\n                            suffix={suffix}\r\n                        />\r\n\r\n                    </div>\r\n                    <CardList query={current.currentQuery}/>\r\n                    <CustomModal\r\n                        saveButtonTitle={'Сохранить'}\r\n                        cancelButtonTitle={'Не сохранять'}\r\n                        modalTitle={'Сохранение запроса'}\r\n                        searchQuery={current.currentQuery}\r\n                    />\r\n                </div>\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport {Col, List, Row} from 'antd'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {FormOutlined, DeleteOutlined, CaretRightOutlined} from '@ant-design/icons'\r\nimport {\r\n    filterFavorites,\r\n    loadSavedVideos,\r\n    setCurrent, setEditedId,\r\n    setModalVisible\r\n} from '../../redux/videosReducer'\r\nimport {useHistory} from 'react-router'\r\nimport {CustomModal} from '../Modal/Modal'\r\n\r\nexport const Favorites = () => {\r\n    const favorites = useSelector(state => state.videos.favorites)\r\n    const dispatch = useDispatch()\r\n    const [searchQueryFav, setSearchQueryFav] = useState('')\r\n    const history = useHistory()\r\n\r\n    const onRunHandler = async (e) => {\r\n        history.push(`/search`)\r\n        const {max, sort, currentQuery} = favorites.find(i => {\r\n            return i.id == e.currentTarget.id\r\n        })\r\n        await dispatch(loadSavedVideos({max, sort, currentQuery}))\r\n        dispatch(setCurrent({currentQuery}))\r\n        history.push(`/search`)\r\n    }\r\n\r\n    const onEditHandler = (e) => {\r\n        dispatch(setModalVisible(true))\r\n        setSearchQueryFav(favorites.find(i => {\r\n            return i.id == e.currentTarget.id\r\n        }).currentQuery)\r\n        dispatch(setEditedId(e.currentTarget.id))\r\n    }\r\n\r\n    const onDeleteHandler = (e) => {\r\n        const filteredFavorites = favorites.filter(i => {\r\n            return i.id != e.currentTarget.id\r\n\r\n        })\r\n        dispatch(filterFavorites(filteredFavorites))\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <div className='searchTitle'>Избранное</div>\r\n            <List\r\n                size=\"small\"\r\n                header={null}\r\n                footer={null}\r\n                dataSource={favorites}\r\n                renderItem={item => {\r\n                    return <div>\r\n                        <List.Item>\r\n                            <Row style={{fontSize: 18, width: \"100%\"}}>\r\n                                <Col span={18}>\r\n                                    <p style={{margin: 0}}>{item.currentTitle}</p>\r\n                                </Col>\r\n                                <Col span={1}>\r\n                                    <CaretRightOutlined id={item.id} onClick={onRunHandler}/>\r\n                                </Col>\r\n                                <Col span={1}>\r\n                                    <FormOutlined id={item.id} onClick={onEditHandler}/>\r\n                                </Col>\r\n                                <Col span={1}>\r\n                                    <DeleteOutlined id={item.id} onClick={onDeleteHandler}/>\r\n                                </Col>\r\n                            </Row>\r\n                        </List.Item>\r\n                        {(favorites.length > 1) && <hr/>}\r\n                    </div>\r\n                }\r\n                }\r\n            />\r\n            <CustomModal\r\n                saveButtonTitle={'Изменить'}\r\n                cancelButtonTitle={'Не изменять'}\r\n                modalTitle={'Изменение запроса'}\r\n                searchQuery={searchQueryFav}\r\n            />\r\n        </>\r\n\r\n    )\r\n}","import React from 'react'\r\nimport { message, Button } from 'antd';\r\n\r\nconst info = () => {\r\n    message.info('L: 1@1.ru, P: 123');\r\n}\r\nexport const EnterMessage = () => {\r\n    return (\r\n        <Button type=\"primary\" onClick={info}>\r\n            Данные для входа\r\n        </Button>\r\n    )\r\n\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport {Form, Input, Button} from 'antd'\r\nimport './AuthPage.css'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {authLogin, formChange, setIsAuthenticated} from '../../redux/authReducer'\r\nimport * as jwt from 'jsonwebtoken'\r\nimport {addLocalStorageQueries} from '../../redux/videosReducer'\r\nimport {EnterMessage} from '../EnterMessage/EnterMessage'\r\n\r\nexport const AuthPage = () => {\r\n    const form = useSelector(state => state.auth.form)\r\n    const dispatch = useDispatch()\r\n    const localStorageAuthData = JSON.parse(localStorage.getItem('userData'))\r\n    const localStorageFavData = JSON.parse(localStorage.getItem('favorites'))\r\n    useEffect(() => {\r\n        localStorageAuthData && dispatch(setIsAuthenticated(jwt.verify(localStorageAuthData.token, 'jwtSecret')))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorageFavData && dispatch(addLocalStorageQueries(localStorageFavData.favorites))\r\n    }, [])\r\n\r\n    const changeHandler = event => {\r\n        dispatch(formChange({[event.target.name]: event.target.value}))\r\n    }\r\n\r\n    const loginHandler = () => {\r\n        dispatch(authLogin(form))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <EnterMessage style={{marginLeft: 'auto', marginRight: 'auto'}}/>\r\n            <div className='formWrap'>\r\n                <Form\r\n                    name=\"basic\"\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n\r\n                >\r\n                    <div className='authLogo'/>\r\n                    <div className='authTitle'>Вход</div>\r\n                    <Form.Item\r\n                        label=\"Логин\"\r\n                        name=\"username\"\r\n                        rules={[\r\n                            {\r\n                                message: 'Введите логин',\r\n                                required: true\r\n                            },\r\n                        ]}\r\n\r\n                    >\r\n                        <Input value={form.email} name=\"email\" onChange={changeHandler}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Пароль\"\r\n                        name=\"password\"\r\n                        rules={[\r\n                            {\r\n                                message: 'Введите пароль',\r\n                                required: true\r\n                            },\r\n                        ]}\r\n\r\n                    >\r\n                        <Input.Password value={form.password} name=\"password\" onChange={changeHandler}/>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={loginHandler}>\r\n                            Войти\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n\r\n\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}","import React from 'react'\nimport './App.css'\nimport 'antd/dist/antd.css'\nimport {useSelector} from 'react-redux'\n\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport {CustomAlert} from './components/Alert/Alert'\n\nimport {Redirect, Switch} from 'react-router'\nimport {CustomLayout} from './components/Layout/Layout'\nimport {CustomSearch} from './components/Search/Search'\nimport {Favorites} from './components/Favorites/Favorites'\nimport {AuthPage} from './components/AuthPage/AuthPage'\n\n\nfunction App() {\n\n    const isAuthenticated = useSelector(state => state.auth.isAuthenticated)\n\n\n    return (\n        <BrowserRouter>\n\n            <div className=\"App\">\n                {\n                    isAuthenticated\n                        ?\n                        <>\n                            <CustomAlert/>\n                            <Switch>\n                                <Route path=\"/search\" exact>\n                                    <CustomLayout>\n                                        <CustomSearch/>\n                                    </CustomLayout>\n                                </Route>\n                                <Route path=\"/favorites\" exact>\n                                    <CustomLayout>\n                                        <Favorites/>\n                                    </CustomLayout>\n                                </Route>\n                                <Redirect to=\"/search\"/>\n                            </Switch>\n\n                        </>\n                        :\n                        <Switch>\n                            <Route path=\"/\" exact>\n                                <AuthPage/>\n                            </Route>\n                            <Redirect to=\"/\"/>\n                        </Switch>\n                }\n            </div>\n        </BrowserRouter>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore, combineReducers} from '@reduxjs/toolkit'\r\nimport videosReducer from './videosReducer'\r\nimport authReducer from './authReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    videos: videosReducer,\r\n     auth: authReducer\r\n})\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer\r\n\r\n})\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport {Provider} from 'react-redux'\nimport {store} from './redux/rootReducer'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\ndocument.getElementById('root')\n)\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}